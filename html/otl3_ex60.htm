<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org">

  <title>OTL 4.0, Example 60 (Using OTL/OCI8: server_attach/detach and session_begin/end)</title>
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR" content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>

<body>
  <h1 align="center">OTL 4.0, Example 60 (Using OTL/OCI8: server_attach/detach and session_begin/end)</h1>

  <h1>Example 60 (Using OTL/OCI8: server_attach/detach and session_begin/end)</h1>

  <p>This example demonstrates how to use the following new functions of the <a href="otl3_connect_class.htm">otl_connect</a> class for OTL/OCI8:</p>

  <ul>
    <li><a href="otl3_connect_class.htm#server_attach">server_attach</a>()</li>

    <li><a href="otl3_connect_class.htm#server_detach">server_detach</a>()</li>

    <li><a href="otl3_connect_class.htm#session_begin">session_begin</a>()</li>

    <li><a href="otl3_connect_class.htm#session_end">session_end</a>()</li>
  </ul>

  <h2>Source Code</h2>
  <pre>
#include &lt;iostream&gt;
using namespace std;

#include &lt;stdio.h&gt;
</pre>
  <pre>
#define OTL_ORA8 // Compile OTL 4.0/OCI8
#include &lt;otlv4.h&gt; // include the OTL 4.0 header file

<a href="otl3_connect_class.htm">otl_connect</a> db; // connect object

void insert()
// insert rows into table
{ 
 <a href="otl3_stream_class.htm">otl_stream</a> o(50, // buffer size
              "insert into test_tab values(:f1&lt;float&gt;,:f2&lt;char[31]&gt;)", 
                 // SQL statement
              db // connect object
             );
 char tmp[32];

 for(int i=1;i&lt;=100;++i){
  sprintf(tmp,"Name%d",i);
  o&lt;&lt;(float)i&lt;&lt;tmp;
 }
}

void select()
{ 
 <a href="otl3_stream_class.htm">otl_stream</a> i(50, // buffer size
              "select * from test_tab where f1&gt;=:f&lt;int&gt; and f1&lt;=:f*2",
                 // SELECT statement
              db // connect object
             ); 
   // create select stream
 
 float f1;
 char f2[31];

 i&lt;&lt;4; // assigning :f = 4
   // SELECT automatically executes when all input variables are
   // assigned. First portion of output rows is fetched to the buffer

 while(!i.eof()){ // while not end-of-data
  i&gt;&gt;f1&gt;&gt;f2;
  cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2="&lt;&lt;f2&lt;&lt;endl;
 }

}

int main()
{
 <a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize OCI environment
 try{

  db.rlogon("scott/tiger"); // connect to Oracle

  <a href="otl3_const_sql.htm">otl_cursor::direct_exec
</a>   (
    db,
    "drop table test_tab",
    otl_exception::disabled // disable OTL exceptions
   ); // drop table

  <a href="otl3_const_sql.htm">otl_cursor::direct_exec
</a>   (
    db,
    "create table test_tab(f1 number, f2 varchar2(30))"
    );  // create table

  insert(); // insert records into table
 
  db.<a href="otl3_connect_class.htm#logoff">logoff</a>(); // disconnect from Oracle

  db.<a href="otl3_connect_class.htm#server_attach">server_attach</a>(); // attach to the local Oracle server
                      // In order to connect to a remote server,
                      // a TNS alias needs to be specified

  for(int i=1;i&lt;=100;++i){
   cout&lt;&lt;"Session begin ==&gt; "&lt;&lt;i&lt;&lt;endl;
   db.<a href="otl3_connect_class.htm#session_begin">session_begin</a>("scott","tiger");
     // begin session; this function is much faster
     // than rlogon() and should be used (see the Oracle
     // manuals for more detail) in high-speed processing
     // systems, possibly with thousands of users.
     // this technique can be used instead of traditional
     // connection pooling.

   select(); // select records from table

   cout&lt;&lt;"Session end ==&gt; "&lt;&lt;i&lt;&lt;endl;
   db.<a href="otl3_connect_class.htm#session_end">session_end</a>(); // end session

  }


  db.<a href="otl3_connect_class.htm#server_detach">server_detach</a>(); // detach from the Oracle server

 }

 catch(<a href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions
  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message
  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error
  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error
 }

 db.<a href="otl3_connect_class.htm#logoff">logoff</a>(); // make sure that the program gets disconnected from Oracle

 return 0;

}
</pre>

  <h2>Output<br></h2>
  <pre>
Repeated groups of the following lines:

</pre>
  <pre>
Session begin ==&gt; XXX
f1=4, f2=Name4
f1=5, f2=Name5
f1=6, f2=Name6
f1=7, f2=Name7
f1=8, f2=Name8
Session end ==&gt; XXX





</pre>
  <hr width="100%">

  <center>
    <p><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a> <a href="home.htm">Go Home</a></p>
  </center>

  <p>Copyright &copy; 1996-2009, Sergei Kuchin, email: <a href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>, <a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a> <script language="JavaScript" type="text/javascript">
<!-- hide from oldgmailsers
  var modDate = new Date(document.lastModified)
  document.write("<i> Last Updated:<\/i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
  //-->
  </script>.</p>

  <p><i>Permission to use, copy, modify and redistribute this document for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i></p><script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
  pageTracker._trackPageview();
  </script>
</body>
</html>
