<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org">

  <title>OTL 4.0, Example 106 (OTL/ODBC and bulk operations with Oracle's LONG)</title>
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR" content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>

<body>
  <h1 align="center">OTL 4.0, Example 106 (OTL/ODBC and bulk operations with Oracle's LONG)</h1>

  <h1>Example 106 (OTL/ODBC&nbsp;and bulk operations with Oracle's LONG)</h1>

  <p>This example demonstrates simple INSERT and SELECT with Oracle's LONG data type being done in bulk (buffer size &gt; 1). This example can be easily modified to make it work with Oracle's LONG RAW by changing the "LONG"&nbsp;data type in the table to "LONG RAW", and by replacing "varchar_long" with "raw_long".</p>

  <h2>Source Code</h2>
  <pre>
#include &lt;iostream&gt;
using namespace std;

#include &lt;stdio.h&gt;
</pre>
  <pre>
#define OTL_ODBC // Compile OTL 4.0/ODBC
#include &lt;otlv4.h&gt; // include the OTL 4.0 header file

<a href="otl3_connect_class.htm">otl_connect</a> db; // connect object

void insert(void)
// insert rows into table
{ 

 <a href="otl3_long_string.htm">otl_long_string</a> f2(1000); // define long string variable
 db.<a href="otl3_connect_class.htm#set_max_long_size">set_max_long_size</a>(1000); // set maximum long string size for connect object

 <a href="otl3_stream_class.htm">otl_stream</a> o(10, // buffer size
              "insert into test_tab values(:f1&lt;int&gt;,:f2&lt;<a href="otl3_bind_variables.htm#varchar_long">varchar_long</a>&gt;)", 
                 // SQL statement
              db // connect object
             );

// Total memory consumption for the buffer equals 1000 * 10, 
// max_long_size * buffer size


 for(int i=1;i&lt;=20;++i){
  for(int j=0;j&lt;50;++j)
   f2[j]='*';
  f2[50]='?';
  f2.<a href="otl3_long_string.htm#set_len">set_len</a>(51);
  o&lt;&lt;i&lt;&lt;f2;
 }
}

void select(void)
{ 
 otl_long_string f2(1000); // define long string variable
 db.set_max_long_size(1000); // set maximum long string size for connect object

 otl_stream i(10, // buffer size
              "select * from test_tab where f1&gt;=:f11&lt;int&gt; and f1&lt;=:f12&lt;int&gt;*2",
                 // SELECT statement
              db // connect object
             ); 
   // create select stream
 
 int f1;

 i&lt;&lt;8&lt;&lt;8; // assigning :f11 = 8, :f12 = 8
   // SELECT automatically executes when all input variables are
   // assigned. First portion of out rows is fetched to the buffer

 while(!i.eof()){ // while not end-of-data
  i&gt;&gt;f1&gt;&gt;f2;
  cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2="&lt;&lt;f2[0]&lt;&lt;f2[f2.len()-1]&lt;&lt;", len="&lt;&lt;f2.len()&lt;&lt;endl;
 }
 
 i&lt;&lt;4&lt;&lt;4; // assigning :1 = 4, :2 = 4
   // SELECT automatically re-executes when all input variables are
   // assigned. First portion of out rows is fetched to the buffer

 while(!i.eof()){ // while not end-of-data
  i&gt;&gt;f1&gt;&gt;f2;
  cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2="&lt;&lt;f2[0]&lt;&lt;f2[f2.len()-1]&lt;&lt;", len="&lt;&lt;f2.len()&lt;&lt;endl;
 }

}
</pre>
  <pre>
int main()
{
 <a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment
 try{

  db.rlogon("UID=scott;PWD=tiger;DSN=my_db"); // connect to ODBC

  <a href="otl3_const_sql.htm">otl_cursor::direct_exec
</a>   (
    db,
    "drop table test_tab",
    otl_exception::disabled // disable OTL exceptions
   ); // drop table

  <a href="otl3_const_sql.htm">otl_cursor::direct_exec
</a>   (
    db,
    "create table test_tab(f1 int, f2 long)"
    );  // create table

  insert(); // insert records into table
  select(); // select records from table

 }

 catch(<a href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions
  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message
  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error
  cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message
  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error
 }

 db.logoff(); // disconnect from ODBC

 return 0;

}
</pre>

  <h2>Output</h2>
  <pre>
f1=8, f2=*?, len=51
f1=9, f2=*?, len=51
f1=10, f2=*?, len=51
f1=11, f2=*?, len=51
f1=12, f2=*?, len=51
f1=13, f2=*?, len=51
f1=14, f2=*?, len=51
f1=15, f2=*?, len=51
f1=16, f2=*?, len=51
f1=4, f2=*?, len=51
f1=5, f2=*?, len=51
f1=6, f2=*?, len=51
f1=7, f2=*?, len=51
f1=8, f2=*?, len=51







</pre>
  <hr width="100%">

  <center>
    <p><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a> <a href="home.htm">Go Home</a></p>
  </center>

  <p>Copyright &copy; 1996-2009, Sergei Kuchin, email: <a href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>, <a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a> <script language="JavaScript" type="text/javascript">
<!-- hide from oldgmailsers
  var modDate = new Date(document.lastModified)
  document.write("<i> Last Updated:<\/i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
  //-->
  </script>.</p>

  <p><i>Permission to use, copy, modify and redistribute this document for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i></p><script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
  pageTracker._trackPageview();
  </script>
</body>
</html>
