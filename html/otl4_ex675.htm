<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org">
  <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR" content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
  <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library, MySQL, MyODBC">

  <title>OTL 4.0, Example 675 (Simple Insert/Select/Update and #define OTL_ODBC_MULTI_MODE)</title>
</head>

<body>
  <center>
    <h1>OTL 4.0, Example 675 (Simple Insert/Select/Update and #define OTL_ODBC_MULTI_MODE)</h1>
  </center>This example demonstrates simple INSERT, SELECT, UPDATE and constant SQL statements in the OTL ODBC <a href="otl3_compile.htm#OTL_ODBC_MULTI_MODE">multi-mode</a>.<br>

  <h2>Source Code</h2>
  <pre>
#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;
</pre>
  <pre>
#define <a href="otl3_compile.htm#OTL_ODBC_MULTI_MODE">OTL_ODBC_MULTI_MODE</a> // Compile OTL 4.0/ODBC multi-mode<br>// #define OTL_ODBC_UNIX // uncomment this line if UnixODBC is used<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void insert(const int buf_size)<br>// insert rows into table<br>{ <br> <a href="otl3_stream_class.htm">otl_stream</a> o(buf_size,<br>              "insert into test_tab values(:f1&lt;int&gt;,:f2&lt;char[31]&gt;)", <br>                 // SQL statement<br>              db // connect object<br>             );<br> char tmp[32];<br><br> for(int i=1;i&lt;=100;++i){<br>  sprintf(tmp,"Name%d",i);<br>  o&lt;&lt;i&lt;&lt;tmp;<br> }<br>}
</pre>
  <pre>
void update(const int af1, const int buf_size)<br>// insert rows into table<br>{ <br> <a href="otl3_stream_class.htm">otl_stream</a> o(buf_size,<br>              "UPDATE test_tab "<br>              "   SET f2=:f2&lt;char[31]&gt; "<br>              " WHERE f1=:f1&lt;int&gt;", <br>                 // UPDATE statement<br>              db // connect object<br>             );<br> o.set_commit(0); // turn OFF the stream's "auto-commit"<br><br> o&lt;&lt;"Name changed"&lt;&lt;af1;<br> o&lt;&lt;<a href="otl3_stream_class.htm#otl_null">otl_null</a>()&lt;&lt;af1+1; // set f2 to NULL<br><br>}
</pre>
  <pre>
void select(const int af1, const int buf_size)<br>{ <br> <a href="otl3_stream_class.htm">otl_stream</a> i(buf_size,<br>              "select * from test_tab "<br>              "where f1&gt;=:f11&lt;int&gt; "<br>              "  and f1&lt;=:f12&lt;int&gt;*2",<br>                // SELECT statement<br>              db // connect object<br>             ); <br>   // create select stream<br> <br> int f1;<br> char f2[31];<br><br> i&lt;&lt;af1&lt;&lt;af1; // :f11 = af1, :f12 = af1<br> while(!i.eof()){ // while not end-of-data<br>  i&gt;&gt;f1;<br>  cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2=";<br>  i&gt;&gt;f2;<br>  if(i.is_null())<br>   cout&lt;&lt;"NULL";<br>  else<br>   cout&lt;&lt;f2;<br>  cout&lt;&lt;endl;<br> }<br><br>}<br><br>int main()<br>{<br> <a href=
"otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment<br> try{<br><br>// ===================== Sybase via ODBC ======================================<br><br>  db.<a href="otl3_connect_class.htm#set_connection_mode">set_connection_mode</a>(OTL_DEFAULT_ODBC_CONNECT);<br>  db.rlogon("scott/tigger@sybsql");<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href=
"otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit();<br><br>  cout&lt;&lt;"============== Sybase via ODBC ====================="&lt;&lt;endl;<br>  insert(10); // insert records into the table<br>  update(10,10); // update records in the table<br>  select(8,10); // select records from the table<br>  cout&lt;&lt;"===================================================="&lt;&lt;endl;<br><br>  db.logoff(); // disconnect from ODBC<br><br>// ===================== TimesTen via ODBC ======================================<br><br>  db.<a href=
"otl3_connect_class.htm#set_connection_mode">set_connection_mode</a>(OTL_TIMESTEN_ODBC_CONNECT);<br>  db.rlogon("scott/tiger@TT_tt1121_32");<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href=
"otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit();<br><br>  cout&lt;&lt;"============== TimesTen via TimesTen ODBC driver ==================="&lt;&lt;endl;<br>  insert(10); // insert records into the table<br>  update(10,10); // update records in the table<br>  select(8,1); // select records from the table, <br>               // stream buffer size should be set to 1 <br>               // when connected to TimesTen via TimesTen ODBC driver<br>  cout&lt;&lt;"===================================================================="&lt;&lt;endl;<br><br>  db.logoff(); // disconnect from ODBC<br><br><br>// ===================== MS SQL 2008 via ODBC ==============================<br><br>  db.<a href="otl3_connect_class.htm#set_connection_mode">set_connection_mode</a>(OTL_MSSQL_2008_ODBC_CONNECT);<br>  db.rlogon("scott/tiger@mssql2008");<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit();<br><br>  cout&lt;&lt;"=========== MS SQL 2005 via ODBC ==================="&lt;&lt;endl;<br>  insert(10); // insert records into the table<br>  update(10,10); // update records in the table<br>  select(8,10); // select records from the table<br>  cout&lt;&lt;"===================================================="&lt;&lt;endl;<br><br>  db.logoff(); // disconnect from ODBC<br><br>// ===================== PostgreSQL via ODBC ==============================<br><br>  db.<a href="otl3_connect_class.htm#set_connection_mode">set_connection_mode</a>(OTL_POSTGRESQL_ODBC_CONNECT);<br>  db.rlogon("scott/tiger@postgresql");<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit();<br><br>  cout&lt;&lt;"=========== PostgreSQL via ODBC ==================="&lt;&lt;endl;<br>  insert(10); // insert records into the table<br>  update(10,10); // update records in the table<br>  select(8,10); // select records from the table<br>  cout&lt;&lt;"===================================================="&lt;&lt;endl;<br><br>  db.logoff(); // disconnect from ODBC<br><br>// ===================== EntipriseDB via ODBC ==============================<br><br>  db.<a href="otl3_connect_class.htm#set_connection_mode">set_connection_mode</a>(OTL_ENTERPRISE_DB_ODBC_CONNECT);<br>  db.rlogon("scott/tiger@edbsql");<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit();<br><br>  cout&lt;&lt;"=========== Enterprise DB via ODBC ================="&lt;&lt;endl;<br>  insert(10); // insert records into the table<br>  update(10,10); // update records in the table<br>  select(8,10); // select records from the table<br>  cout&lt;&lt;"===================================================="&lt;&lt;endl;<br><br>  db.logoff(); // disconnect from ODBC<br><br>// ===================== MySQL via ODBC ==============================<br><br>  db.<a href="otl3_connect_class.htm#set_connection_mode">set_connection_mode</a>(OTL_MYODBC35_ODBC_CONNECT);<br>  db.rlogon("scott/tiger@mysql35");<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit();<br><br>  cout&lt;&lt;"=========== MySQL via MyODBC 3.5 ==================="&lt;&lt;endl;<br>  insert(1); // insert records into the table, stream buffer size should be set to 1<br>  update(10,1); // update records in the table, stream buffer size should be set to 1<br>  select(8,10); // select records from the table<br>  cout&lt;&lt;"===================================================="&lt;&lt;endl;<br><br>  db.logoff(); // disconnect from ODBC<br><br> }<br><br> catch(<a href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>  cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message<br>  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br> }<br><br> db.logoff(); // disconnect from ODBC<br><br> return 0;<br><br>}
</pre>

  <h2>Output</h2>
  <pre>
============== Sybase via ODBC =====================<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>====================================================<br>============== TimesTen via TimesTen ODBC driver ===================<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>====================================================================<br>=========== MS SQL 2005 via ODBC ===================<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>====================================================<br>=========== PostgreSQL via ODBC ===================<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>====================================================<br>=========== Enterprise DB via ODBC =================<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>====================================================<br>=========== MySQL via MyODBC 3.5 ===================<br>f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br>====================================================<br><br>
</pre>
  <hr width="100%">

  <center>
    <a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a href="home.htm">Go Home</a>
  </center>

  <p>Copyright &copy; 1996-2009, Sergei Kuchin, email: <a href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>, <a href="mailto:skuchin@gmail.com">skuchin@gmail.com <script language="JavaScript" type="text/javascript">
<!-- hide from old browsers
  var modDate = new Date(document.lastModified)
  document.write("<i> Last Updated:<\/i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
  //-->
  </script></a>.</p>

  <p><i>Permission to use, copy, modify and redistribute this document for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i></p><script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
  pageTracker._trackPageview();
  </script>
</body>
</html>
