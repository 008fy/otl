<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org">

  <title>OTL 4.0, Constant SQL statements</title>
  <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR" content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>

<body>
  <h1 align="center">OTL 4.0, Constant SQL statements</h1>

  <h1><a name="otl_constant_sql" id="otl_constant_sql"></a>Constant SQL statements</h1>

  <p>A SQL statement / PL/SQL block / stored procedure call is considered to be constant if it does not have any bind variables. OTL 4.0 has a static (in class) function to execute constant statements.</p>

  <p><b><font size="+1">Examples<br></font></b></p>
  <pre>
// static otl_cursor::direct_exec()<br><br>  otl_cursor::direct_exec<br>   (db, // <a href="otl3_connect_class.htm">connect</a> object<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table
</pre>
  <pre>
  otl_cursor::direct_exec<br>   (db, // <a href="otl3_connect_class.htm">connect</a> object<br>    "drop table test_tab", // SQL statement or PL/SQL block<br>    <a href="otl3_exception_class.htm#enum">otl_exception::disabled</a> // disable OTL exceptions,<br>                            // in other words, ignore any<br>                            // database error<br>   ); // drop table<br><br>// or otl_connect::direct_exec()<br><br>  db.<a href="otl3_connect_class.htm#direct_exec">direct_exec</a> // <a href="otl3_connect_class.htm">connect</a> object   <br>   ("create table test_tab(f1 int, f2 varchar(30))"<br>   );  // create table<br><br>  db.<a href="otl3_connect_class.htm#direct_exec">direct_exec</a> // <a href=
"otl3_connect_class.htm">connect</a> object   <br>    ("drop table test_tab", // SQL statement or PL/SQL block<br>     <a href="otl3_exception_class.htm#enum">otl_exception::disabled</a> // disable OTL exceptions,<br>                            // in other words, ignore any<br>                            // database error<br>   ); // drop table<br><br><br>// or otl_connect::operator&lt;&lt;(const char*)<br><br>  db<a href="otl3_connect_class.htm#operator_ll">&lt;&lt;</a>"create table test_tab(f1 number, f2 varchar2(30))";<br>  try{<br>    db<a href="otl3_connect_class.htm#operator_ll">&lt;&lt;</a>"drop table test_tab""; // SQL statement or PL/SQL block  <br>  }catch(<a href="otl3_exception_class.htm">otl_exception</a>&amp;){<br>   // ignore a database error<br>  }<br><br>
</pre>

  <p>otl_cursor is one of the OTL 4.0 internal classes. It is not recommended to use the OTL 4.0 low level classes and functions except for the <i>direct_exec()</i> because it is a special case and it will not be discontinued in the future releases of the OTL.</p>

  <p>The direct_exec() function may return the following values of the <i>long int</i> datatype:</p>

  <ul>
    <li><b>-1</b>, if otl_exceptions are disabled (the second parameter is set to otl_exception::disabled) and the underlying API returns an error.</li>

    <li><b>&gt;=0</b>, if the SQL command to be executed is finished succesfully. Actually, the function returns the <i>ROWS PROCESSED COUNT&nbsp;</i> (RPC)in case of INSERT, UPDATE or DELETE statements.</li>
  </ul>

  <p>Here is an example of the direct_exec(), returning a row processed count:<br></p>

  <p><span style="font-family: monospace;">// static otl_cursor::direct_exec</span><br>
  <br></p>
  <pre>
  long rpc=otl_cursor::direct_exec<br>            (db, // <a href="otl3_connect_class.htm">connect</a> object<br>             "delete from test_tab where f1&gt;=95"<br>            ); <br><br>  cout&lt;&lt;"Rows deleted: "&lt;&lt;rpc&lt;&lt;endl;<br><br>
</pre>

  <p><span style="font-family: monospace;">// or otl_connect:direct_exec<br></span></p>
  <pre>
  long rpc=db.<a href="otl3_connect_class.htm#direct_exec">direct_exec</a> // <a href="otl3_connect_class.htm">connect</a> object<br>            ("delete from test_tab where f1&gt;=95"<br>            ); <br><br>  cout&lt;&lt;"Rows deleted: "&lt;&lt;rpc&lt;&lt;endl;<br>
</pre>

  <p><br></p>

  <center>
    <hr width="100%">
  </center>

  <center>
    <p><a href="otl3_value.htm">Prev</a> <a href="otl3_examples.htm">Next</a><a href="otl3.htm">Contents</a><a href="home.htm">Go Home</a></p>
  </center>

  <p>Copyright &copy; 1996-2009, Sergei Kuchin, email: <a href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>, <a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a>. <script language="JavaScript" type="text/javascript">
<!-- hide from oldgmailsers
  var modDate = new Date(document.lastModified)
  document.write("<i> Last Updated:<\/i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
  //-->
  </script></p>

  <p><i>Permission to use, copy, modify and redistribute this document for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i></p><script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
  pageTracker._trackPageview();
  </script>
</body>
</html>
