<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org">
  <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR" content="Mozilla/4.77 [en] (Win95; U) [Netscape]">
  <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library, MySQL, MyODBC">

  <title>OTL 4.0, Example 133 (Simple Insert/Select/Update)</title>
</head>

<body>
  <center>
    <h1>OTL 4.0, Example 133 (Simple Insert/Select/Update)</h1>
  </center>

  <h1>Example 133 (Simple Insert/Select/Update)</h1>This example demonstrates simple INSERT, SELECT, UPDATE and constant SQL statements.&nbsp;<br>

  <h2>Source Code</h2>
  <pre>
#include &lt;iostream&gt;<br>using namespace std;<br><br>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;<br>#include &lt;stdlib.h&gt;
</pre>
  <pre>
#define OTL_ODBC // Compile OTL 4.0/ FireBird Database ODBC<br>// #define OTL_ODBC_UNIX // uncomment this line if UnixODBC is used<br>#include &lt;otlv4.h&gt; // include the OTL 4.0 header file<br><br><a href="otl3_connect_class.htm">otl_connect</a> db; // connect object<br><br>void insert()<br>// insert rows into table<br>{ <br> <a href="otl3_stream_class.htm">otl_stream</a> o(1, // buffer size should be == 1 always on INSERT<br>              "insert into test_tab values(:f1&lt;int&gt;,:f2&lt;char[31]&gt;)", <br>                 // SQL statement<br>              db // connect object<br>             );<br> char tmp[32];<br><br> for(int i=1;i&lt;=100;++i){<br>  sprintf(tmp,"Name%d",i);<br>  o&lt;&lt;i&lt;&lt;tmp;<br> }<br>}
</pre>
  <pre>
void update(const int af1)<br>// insert rows into table<br>{ <br> <a href="otl3_stream_class.htm">otl_stream</a> o(1, // buffer size should be == 1 always on UPDATE<br>              "UPDATE test_tab "<br>              "   SET f2=:f2&lt;char[31]&gt; "<br>              " WHERE f1=:f1&lt;int&gt;", <br>                 // UPDATE statement<br>              db // connect object<br>             );
</pre>
  <pre>
 o&lt;&lt;"Name changed"&lt;&lt;af1;<br> o&lt;&lt;<a href="otl3_stream_class.htm#otl_null">otl_null</a>()&lt;&lt;af1+1; // set f2 to NULL<br><br>}
</pre>
  <pre>
void select(const int af1)<br>{ <br> <a href="otl3_stream_class.htm">otl_stream</a> i(50, // buffer size may be &gt; 1<br>              "select * from test_tab where f1&gt;=:f11&lt;int&gt; and f1&lt;=:f12&lt;int&gt;*2", <br>                 // SELECT statement<br>              db // connect object<br>             ); <br>   // create select stream<br> <br> int f1;<br> char f2[31];<br><br> i&lt;&lt;af1&lt;&lt;af1; // Writing input values into the stream<br> while(!i.eof()){ // while not end-of-data<br>  i&gt;&gt;f1;<br>  cout&lt;&lt;"f1="&lt;&lt;f1&lt;&lt;", f2=";<br>  i&gt;&gt;f2;<br>  if(i.is_null())<br>   cout&lt;&lt;"NULL";<br>  else<br>   cout&lt;&lt;f2;<br>  cout&lt;&lt;endl;<br> }<br><br>}<br><br>int main()<br>{<br> <a href=
"otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize ODBC environment<br> try{<br><br>  db.rlogon("UID=scott;PWD=tiger;DSN=ib6sql"); // connect to ODBC<br>//  db.rlogon("scott/tiger@ib6sql"); // connect to ODBC, alternative format<br>                                    // of connect string <br><br>  <a href="otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "drop table test_tab",<br>    otl_exception::disabled // disable OTL exceptions<br>   ); // drop table<br><br>  <a href=
"otl3_const_sql.htm">otl_cursor::direct_exec<br></a>   (<br>    db,<br>    "create table test_tab(f1 int, f2 varchar(30))"<br>    );  // create table<br><br>  db.commit(); // committing the create table statement to to the database<br><br>  insert(); // insert records into the table<br>  update(10); // update records in the table<br>  select(8); // select records from the table<br><br> }<br><br> catch(<a href=
"otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions<br>  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message<br>  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error<br>  cerr&lt;&lt;p.sqlstate&lt;&lt;endl; // print out SQLSTATE message<br>  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error<br> }<br><br> db.logoff(); // disconnect from ODBC<br><br> return 0;<br><br>}
</pre>

  <h2>Output</h2>
  <pre>
f1=8, f2=Name8<br>f1=9, f2=Name9<br>f1=10, f2=Name changed<br>f1=11, f2=NULL<br>f1=12, f2=Name12<br>f1=13, f2=Name13<br>f1=14, f2=Name14<br>f1=15, f2=Name15<br>f1=16, f2=Name16<br><br><br><br><br><br>
</pre>
  <hr width="100%">

  <center>
    <a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a><a href="home.htm">Go Home</a>
  </center>

  <p>Copyright &copy; 1996-2009, Sergei Kuchin, email: <a href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>, <a href="mailto:skuchin@gmail.com">skuchin@gmail.com <script language="JavaScript" type="text/javascript">
<!-- hide from old browsers
  var modDate = new Date(document.lastModified)
  document.write("<i> Last Updated:<\/i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
  //-->
  </script></a>.</p>

  <p><i>Permission to use, copy, modify and redistribute this document for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i></p><script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
  pageTracker._trackPageview();
  </script>
</body>
</html>
