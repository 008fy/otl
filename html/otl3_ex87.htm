<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org">

  <title>Example 87 (STL vector based PL/SQL table of DATEs as parameter, Oracle 7)</title>
  <meta name="Author" content="Sergei Kuchin">
  <meta name="GENERATOR" content="Mozilla/3.03Gold (Win95; I) [Netscape]">
  <meta name="KeyWords" content="OTL, Oracle, ODBC, DB2, CLI, database API, C++, Template Library">
</head>

<body>
  <h1 align="center">OTL 4.0, Example 87 (STL vector based PL/SQL table of DATEs as parameter, Oracle 7)</h1>

  <h1>Example 87 (STL vector based PL/SQL table of DATEs as parameter, Oracle 7)</h1>

  <p>This example demonstrates how to use OTL <a href="otl3_pl_tab.htm">STL vector based PL/SQL table containers</a> for reading/writing PL/SQL tables of DATEs from/to the otl_stream.</p>

  <h2>Source Code</h2>
  <pre>
#define OTL_ORA7 // Compile OTL 4.0/OCI7
#define OTL_STL // Turn on STL
#include &lt;otlv4.h&gt; // include the OTL 4.0 header file

#include &lt;cstdio&gt;
#include &lt;string&gt;
#include &lt;iostream&gt;

using namespace std;

<a href="otl3_connect_class.htm">otl_connect</a> db; // connect object
</pre>
  <pre>
void plsql(void)
{ 
 otl_stream s(1, // buffer size needs to be set to 1 in this case
              "begin "
              "  pkg_test.prc_test(:v&lt;int,in&gt;, :t2&lt;timestamp,out[200]&gt;); "
              "end;",
              db // connect object
             );

 s.set_commit(0); // Since there is no transactions, unset the stream auto-commit

 <a href="otl3_pl_tab.htm">otl_datetime_vec</a> t2; // PL/SQL table of otl_datetime in the vector format
</pre>
  <pre>
 s&lt;&lt;7; // assign :v = 7
 s&gt;&gt;t2; // read :t2 from the stream.
</pre>
  <pre>
 cout&lt;&lt;endl&lt;&lt;endl&lt;&lt;"T2_Len="&lt;&lt;t2.len()&lt;&lt;endl;
 for(int j=0;j&lt;t2.len();++j)
  if(t2.is_null(j))
   cout&lt;&lt;"T2["&lt;&lt;j&lt;&lt;"]=NULL"&lt;&lt;endl;
  else
   cout&lt;&lt;"T2["&lt;&lt;j&lt;&lt;"]="&lt;&lt;t2.v[j].month
       &lt;&lt;"/"&lt;&lt;t2.v[j].day
       &lt;&lt;"/"&lt;&lt;t2.v[j].year
       &lt;&lt;" "&lt;&lt;t2.v[j].hour
       &lt;&lt;":"&lt;&lt;t2.v[j].minute
       &lt;&lt;":"&lt;&lt;t2.v[j].second
       &lt;&lt;endl;

}


int main()
{
 <a href="otl3_connect_class.htm">otl_connect::otl_initialize</a>(); // initialize OCI environment
 try{

  db.rlogon("scott/tiger"); // connect to Oracle

  otl_cursor::direct_exec
   (db,
    "CREATE OR REPLACE PACKAGE pkg_test IS "
    "  TYPE my_date_table IS TABLE OF DATE INDEX BY BINARY_INTEGER; "
    " "
    "  PROCEDURE prc_test(v IN NUMBER, v2 OUT my_date_table); "
    " "
    "END; "
  );

  otl_cursor::direct_exec
   (db,
    "CREATE OR REPLACE PACKAGE BODY pkg_test IS "
    " "
    "  PROCEDURE prc_test(v IN NUMBER, v2 OUT my_date_table) "
    "  IS "
    "  BEGIN "
    "    FOR i IN 1..v LOOP "
    "      v2(i) := SYSDATE-i; "
    "    END LOOP; "
    "  END; "
    "   "
    "END; "
  );


  plsql();

 }

 catch(<a href="otl3_exception_class.htm">otl_exception</a>&amp; p){ // intercept OTL exceptions
  cerr&lt;&lt;p.msg&lt;&lt;endl; // print out error message
  cerr&lt;&lt;p.stm_text&lt;&lt;endl; // print out SQL that caused the error
  cerr&lt;&lt;p.var_info&lt;&lt;endl; // print out the variable that caused the error
 }

 db.logoff(); // disconnect from Oracle

 return 0;

}
</pre>

  <h2>Output</h2>
  <pre>
T2_Len=7
T2[0]=2/29/2000 15:40:33
T2[1]=2/28/2000 15:40:33
T2[2]=2/27/2000 15:40:33
T2[3]=2/26/2000 15:40:33
T2[4]=2/25/2000 15:40:33
T2[5]=2/24/2000 15:40:33
T2[6]=2/23/2000 15:40:33










</pre>
  <hr width="100%">

  <center>
    <p><a href="otl3_examples.htm">Examples</a> <a href="otl3.htm">Contents</a> <a href="home.htm">Go Home</a></p>
  </center>

  <p>Copyright &copy; 1996-2009, Sergei Kuchin, email: <a href="mailto:skuchin@aceweb.com">skuchin@aceweb.com</a>, <a href="mailto:skuchin@gmail.com">skuchin@gmail.com</a> <script language="JavaScript" type="text/javascript">
<!-- hide from oldgmailsers
  var modDate = new Date(document.lastModified)
  document.write("<i> Last Updated:<\/i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + "0"+(modDate.getYear())%100+".");
  //-->
  </script>.</p>

  <p><i>Permission to use, copy, modify and redistribute this document for any purpose is hereby granted without fee, provided that the above copyright notice appear in all copies. THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</i></p><script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5456201-1");
  pageTracker._trackPageview();
  </script>
</body>
</html>
